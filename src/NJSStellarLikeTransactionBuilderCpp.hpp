// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

#ifndef DJINNI_GENERATED_NJSSTELLARLIKETRANSACTIONBUILDER_HPP
#define DJINNI_GENERATED_NJSSTELLARLIKETRANSACTIONBUILDER_HPP


#include "../include/BitcoinLikeNetworkParameters.hpp"
#include "../include/Currency.hpp"
#include "../include/CurrencyUnit.hpp"
#include "../include/EthereumLikeNetworkParameters.hpp"
#include "../include/RippleLikeNetworkParameters.hpp"
#include "../include/StellarLikeNetworkParameters.hpp"
#include "../include/TezosLikeNetworkParameters.hpp"
#include "NJSAmountCpp.hpp"
#include "NJSBigIntCpp.hpp"
#include "NJSStellarLikeTransactionCallback.hpp"
#include "NJSStellarLikeTransactionCpp.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/StellarLikeTransactionBuilder.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSStellarLikeTransactionBuilder final {
public:

    static void Initialize(Local<Object> target);
    NJSStellarLikeTransactionBuilder() = delete;

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::StellarLikeTransactionBuilder> &object);
    static Nan::Persistent<ObjectTemplate> StellarLikeTransactionBuilder_prototype;

private:
    static NAN_METHOD(addNativePayment);

    static NAN_METHOD(addCreateAccount);

    static NAN_METHOD(setBaseFee);

    static NAN_METHOD(setTextMemo);

    static NAN_METHOD(setNumberMemo);

    static NAN_METHOD(setHashMemo);

    static NAN_METHOD(setReturnMemo);

    static NAN_METHOD(setSequence);

    static NAN_METHOD(build);

    static NAN_METHOD(parseRawTransaction);

    static NAN_METHOD(parseSignatureBase);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
};
#endif //DJINNI_GENERATED_NJSSTELLARLIKETRANSACTIONBUILDER_HPP
