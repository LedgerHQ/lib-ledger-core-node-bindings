// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ethereum_like_wallet.djinni

#include "NJSGetEthreumLikeWalletCallback.hpp"
#include "NJSObjectWrapper.hpp"

using namespace v8;
using namespace node;
using namespace std;

void NJSGetEthreumLikeWalletCallback::onSuccess(const std::shared_ptr<::ledger::core::api::EthereumLikeWallet> & wallet, bool isCreated)
{
    Nan::HandleScope scope;
    //Wrap parameters
    auto arg_0 = NJSEthereumLikeWallet::wrap(wallet);

    auto arg_1 = Nan::New<Boolean>(isCreated);
    Local<Value> args[2] = {arg_0,arg_1};
    Local<Object> local_njs_impl = Nan::New<Object>(njs_impl);
    if(!local_njs_impl->IsObject())
    {
        Nan::ThrowError("NJSGetEthreumLikeWalletCallback::onSuccess fail to retrieve node implementation");
    }
    auto calling_funtion = Nan::Get(local_njs_impl,Nan::New<String>("onSuccess").ToLocalChecked()).ToLocalChecked();
    auto result_onSuccess = Nan::CallAsFunction(calling_funtion->ToObject(Nan::GetCurrentContext()).ToLocalChecked(),local_njs_impl,2,args);
    if(result_onSuccess.IsEmpty())
    {
        Nan::ThrowError("NJSGetEthreumLikeWalletCallback::onSuccess call failed");
    }
}

void NJSGetEthreumLikeWalletCallback::onError(const ::ledger::core::api::Error & error)
{
    Nan::HandleScope scope;
    //Wrap parameters
    auto arg_0 = Nan::New<Object>();
    auto arg_0_1 = Nan::New<Integer>((int)error.code);
    Nan::DefineOwnProperty(arg_0, Nan::New<String>("code").ToLocalChecked(), arg_0_1);
    auto arg_0_2 = Nan::New<String>(error.message).ToLocalChecked();
    Nan::DefineOwnProperty(arg_0, Nan::New<String>("message").ToLocalChecked(), arg_0_2);

    Local<Value> args[1] = {arg_0};
    Local<Object> local_njs_impl = Nan::New<Object>(njs_impl);
    if(!local_njs_impl->IsObject())
    {
        Nan::ThrowError("NJSGetEthreumLikeWalletCallback::onError fail to retrieve node implementation");
    }
    auto calling_funtion = Nan::Get(local_njs_impl,Nan::New<String>("onError").ToLocalChecked()).ToLocalChecked();
    auto result_onError = Nan::CallAsFunction(calling_funtion->ToObject(Nan::GetCurrentContext()).ToLocalChecked(),local_njs_impl,1,args);
    if(result_onError.IsEmpty())
    {
        Nan::ThrowError("NJSGetEthreumLikeWalletCallback::onError call failed");
    }
}

NAN_METHOD(NJSGetEthreumLikeWalletCallback::New) {
    //Only new allowed
    if(!info.IsConstructCall())
    {
        return Nan::ThrowError("NJSGetEthreumLikeWalletCallback function can only be called as constructor (use New)");
    }

    auto resolver = v8::Promise::Resolver::New(Nan::GetCurrentContext()).ToLocalChecked();
    auto node_instance = std::make_shared<NJSGetEthreumLikeWalletCallback>(resolver);
    djinni::js::ObjectWrapper<NJSGetEthreumLikeWalletCallback>::Wrap(node_instance, info.This());
    info.GetReturnValue().Set(info.This());
}


Nan::Persistent<ObjectTemplate> NJSGetEthreumLikeWalletCallback::GetEthreumLikeWalletCallback_prototype;

Local<Object> NJSGetEthreumLikeWalletCallback::wrap(const std::shared_ptr<ledger::core::api::GetEthreumLikeWalletCallback> &object) {
    Nan::EscapableHandleScope scope;
    Local<ObjectTemplate> local_prototype = Nan::New(GetEthreumLikeWalletCallback_prototype);

    Local<Object> obj;
    if(!local_prototype.IsEmpty())
    {
        obj = local_prototype->NewInstance(Nan::GetCurrentContext()).ToLocalChecked();
        djinni::js::ObjectWrapper<ledger::core::api::GetEthreumLikeWalletCallback>::Wrap(object, obj);
    }
    else
    {
        Nan::ThrowError("NJSGetEthreumLikeWalletCallback::wrap: object template not valid");
    }
    return scope.Escape(obj);
}

void NJSGetEthreumLikeWalletCallback::Initialize(Local<Object> target) {
    Nan::HandleScope scope;

    Local<FunctionTemplate> func_template = Nan::New<FunctionTemplate>(NJSGetEthreumLikeWalletCallback::New);
    Local<ObjectTemplate> objectTemplate = func_template->InstanceTemplate();
    objectTemplate->SetInternalFieldCount(1);

    func_template->SetClassName(Nan::New<String>("NJSGetEthreumLikeWalletCallback").ToLocalChecked());
    Nan::SetPrototypeMethod(func_template,"New", New);
    //Set object prototype
    GetEthreumLikeWalletCallback_prototype.Reset(objectTemplate);

    //Add template to target
    target->Set(Nan::New<String>("NJSGetEthreumLikeWalletCallback").ToLocalChecked(), func_template->GetFunction(Nan::GetCurrentContext()).ToLocalChecked());
}
