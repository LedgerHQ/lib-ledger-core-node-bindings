// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from configuration.djinni

#include "NJSBlockchainExplorerEnginesCpp.hpp"
#include "NJSObjectWrapper.hpp"

using namespace v8;
using namespace node;
using namespace std;


NAN_METHOD(NJSBlockchainExplorerEngines::New) {
    //Only new allowed
    if(!info.IsConstructCall())
    {
        return Nan::ThrowError("NJSBlockchainExplorerEngines function can only be called as constructor (use New)");
    }
    info.GetReturnValue().Set(info.This());
}


Nan::Persistent<ObjectTemplate> NJSBlockchainExplorerEngines::BlockchainExplorerEngines_prototype;

Local<Object> NJSBlockchainExplorerEngines::wrap(const std::shared_ptr<ledger::core::api::BlockchainExplorerEngines> &object) {
    Nan::EscapableHandleScope scope;
    Local<ObjectTemplate> local_prototype = Nan::New(BlockchainExplorerEngines_prototype);

    Local<Object> obj;
    if(!local_prototype.IsEmpty())
    {
        obj = local_prototype->NewInstance(Nan::GetCurrentContext()).ToLocalChecked();
        djinni::js::ObjectWrapper<ledger::core::api::BlockchainExplorerEngines>::Wrap(object, obj);
    }
    else
    {
        Nan::ThrowError("NJSBlockchainExplorerEngines::wrap: object template not valid");
    }
    return scope.Escape(obj);
}

NAN_METHOD(NJSBlockchainExplorerEngines::isNull) {
    auto cpp_implementation = djinni::js::ObjectWrapper<ledger::core::api::BlockchainExplorerEngines>::Unwrap(info.This());
    auto isNull = !cpp_implementation ? true : false;
    return info.GetReturnValue().Set(Nan::New<Boolean>(isNull));
}

void NJSBlockchainExplorerEngines::Initialize(Local<Object> target) {
    Nan::HandleScope scope;

    Local<FunctionTemplate> func_template = Nan::New<FunctionTemplate>(NJSBlockchainExplorerEngines::New);
    Local<ObjectTemplate> objectTemplate = func_template->InstanceTemplate();
    objectTemplate->SetInternalFieldCount(1);

    func_template->SetClassName(Nan::New<String>("NJSBlockchainExplorerEngines").ToLocalChecked());

    //SetPrototypeMethod all methods
    Nan::SetPrototypeMethod(func_template,"isNull", isNull);
    //Set object prototype
    BlockchainExplorerEngines_prototype.Reset(objectTemplate);

    //Add template to target
    target->Set(Nan::New<String>("NJSBlockchainExplorerEngines").ToLocalChecked(), func_template->GetFunction(Nan::GetCurrentContext()).ToLocalChecked());
}
