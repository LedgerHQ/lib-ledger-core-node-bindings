// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from tezos_like_wallet.djinni

#ifndef DJINNI_GENERATED_NJSTEZOSLIKEACCOUNT_HPP
#define DJINNI_GENERATED_NJSTEZOSLIKEACCOUNT_HPP


#include "NJSBigIntCallback.hpp"
#include "NJSStringCallback.hpp"
#include "NJSTezosLikeOriginatedAccountCpp.hpp"
#include "NJSTezosLikeTransactionBuilderCpp.hpp"
#include "NJSTezosLikeTransactionCpp.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/TezosLikeAccount.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSTezosLikeAccount final {
public:

    static void Initialize(Local<Object> target);
    NJSTezosLikeAccount() = delete;

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::TezosLikeAccount> &object);
    static Nan::Persistent<ObjectTemplate> TezosLikeAccount_prototype;

private:
    static NAN_METHOD(broadcastRawTransaction);

    static NAN_METHOD(broadcastTransaction);

    static NAN_METHOD(buildTransaction);

    /**
     * Get needed storage to proceed a tx
     * @param address to which we want to send tx
     * @return needed storage to interact with address/contract
     * Note: same note as for getGasPrice method on EthereumLikeAccount
     */
    static NAN_METHOD(getStorage);

    /**
     * Get estimated gas limit to set so the transaction will succeed
     * The passed address could be implicit address or contract
     * This estimation is based on X last incoming txs (to address) that succeeded
     * Note: same note as for getFees method on BitcoinLikeAccount
     */
    static NAN_METHOD(getEstimatedGasLimit);

    /** Get fees from network */
    static NAN_METHOD(getFees);

    /** Get gas price from network */
    static NAN_METHOD(getGasPrice);

    /** Get originated accounts by current account */
    static NAN_METHOD(getOriginatedAccounts);

    /** Get current delegate */
    static NAN_METHOD(getCurrentDelegate);

    /**
     * Get the balance of the account for a given token
     * @param tokenAddress Address of the contract
     */
    static NAN_METHOD(getTokenBalance);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
};
#endif //DJINNI_GENERATED_NJSTEZOSLIKEACCOUNT_HPP
