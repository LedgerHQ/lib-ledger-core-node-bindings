name: coin-integration-alpha
on:
  push:
    branches:
      - 'int-*'
jobs:
  prebuild-for-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, macos-latest, windows-2016]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org
          always-auth: true
      - uses: actions/setup-python@v1
        with:
          python-version: '2.7.x'
      - name: install
        run: yarn --frozen-lockfile --ignore-scripts
      - name: fetch libcore
        run: yarn preinstall
      - name: config gcc
        if: runner.os == 'Linux'
        run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
      - name: prebuild for electron 9.0
        run: npx node-pre-gyp configure build package --runtime=electron --target=9.0.0 --build-from-source --dist-url=https://electronjs.org/headers
      - name: prebuild for electron 8.2
        run: npx node-pre-gyp configure build package --runtime=electron --target=8.2.0 --build-from-source --dist-url=https://electronjs.org/headers
      - name: prebuild for node 12
        run: npx node-pre-gyp configure build package --target=12.16.0
      - name: Get version and publish @coin on NPM
        if: matrix.os == 'ubuntu-16.04'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_GAGBO_PUBLISH_TOKEN }}
        run: |
            export COIN=$(echo ${GITHUB_REF#refs/heads/int-})
            echo "I hope you remembered to run 'yarn version --prerelease --preid \"$COIN\"'"
            [ -z "$COIN" ] && echo "the COIN tag is not set. Aborting publish" && exit 1
            yarn publish --tag "$COIN"
