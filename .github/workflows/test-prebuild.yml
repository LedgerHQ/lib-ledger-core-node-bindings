name: test-prebuild
on:
  pull_request:
    branches:
      - hotfixes/6.x
      - master
  push:
    branches:
      - hotfixes/6.x
      - master

jobs:
  prebuild-for-platform-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
    container:
      image: ghcr.io/ledgerhq/lib-ledger-core-build-env/lib-ledger-core-build-env:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CI_BOT_TOKEN }}
    steps:
      - uses: actions/checkout@v1
      - name: install
        run: apt-get --allow-releaseinfo-change update; curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash; export NVM_DIR="$HOME/.nvm"; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"; [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"; nvm install 14;nvm use 14;  apt-get install -y npm;  npm install -g yarn; yarn --frozen-lockfile --ignore-scripts; yarn preinstall
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - name: prebuild for node 14
        run: export NODE_TLS_REJECT_UNAUTHORIZED=0; apt-get install -y libpython3.6; pwd; ls -l; ls -l ./lib/libledger-core.so; chmod 777 ./lib/libledger-core.so; chown -R 1001:118 . ; npx  @mapbox/node-pre-gyp configure rebuild package --target=14.17.0 --python=/usr/bin/python3
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean
      - name: prebuild for node 12
        run: export NODE_TLS_REJECT_UNAUTHORIZED=0; npx  @mapbox/node-pre-gyp configure build package --target=12.16.0
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean; strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep -i glib
      - name: prebuild for electron 13.1
        run: export NODE_TLS_REJECT_UNAUTHORIZED=0; npx  @mapbox/node-pre-gyp configure build package --runtime=electron --target=13.1.0 --build-from-source --dist-url=https://electronjs.org/headers
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean; strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep -i glib
      - name: prebuild for electron 13.5
        run: export NODE_TLS_REJECT_UNAUTHORIZED=0; npx  @mapbox/node-pre-gyp configure build package --runtime=electron --target=13.5.0 --build-from-source --dist-url=https://electronjs.org/headers

  prebuild-for-platform-windows-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 14.x
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8.x'
      - name: install
        run: yarn --frozen-lockfile --ignore-scripts
      - name: fetch libcore
        run: yarn preinstall
      - name: prebuild for node 14
        run: npx  @mapbox/node-pre-gyp configure rebuild package --target=14.17.0
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean
      - name: prebuild for node 12
        run: npx  @mapbox/node-pre-gyp configure build package --target=12.16.0
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean
      - name: prebuild for electron 13.1
        run: npx  @mapbox/node-pre-gyp configure build package --runtime=electron --target=13.1.0 --build-from-source --dist-url=https://electronjs.org/headers
      - name: clean
        run: npx  @mapbox/node-pre-gyp clean
      - name: prebuild for electron 13.5
        run: npx  @mapbox/node-pre-gyp configure build package --runtime=electron --target=13.5.0 --build-from-source --dist-url=https://electronjs.org/headers
      - name: list files
        run: |
          ls
          cd build
          ls
          cd stage
          ls
